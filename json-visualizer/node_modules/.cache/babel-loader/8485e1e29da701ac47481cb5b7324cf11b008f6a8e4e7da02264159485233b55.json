{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swaya\\\\OneDrive\\\\Documents\\\\GitHub\\\\ChatBot\\\\json-visualizer\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Install vis-network before using this code: npm install vis-network\n\nimport React, { useRef, useEffect } from \"react\";\nimport { Network } from \"vis-network\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JSONVisualizer({\n  data\n}) {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (!data) return;\n\n    // Convert JSON to nodes and edges for vis-network\n    const createGraphData = json => {\n      const nodes = [];\n      const edges = [];\n      let idCounter = 1;\n      const traverse = (node, parentId = null) => {\n        const nodeId = idCounter++;\n        nodes.push({\n          id: nodeId,\n          label: typeof node === \"object\" ? \"Object\" : String(node)\n        });\n        if (parentId !== null) {\n          edges.push({\n            from: parentId,\n            to: nodeId\n          });\n        }\n        if (typeof node === \"object\" && node !== null) {\n          Object.entries(node).forEach(([key, value]) => {\n            const keyId = idCounter++;\n            nodes.push({\n              id: keyId,\n              label: key\n            });\n            edges.push({\n              from: nodeId,\n              to: keyId\n            });\n            traverse(value, keyId);\n          });\n        }\n      };\n      traverse(json);\n      return {\n        nodes,\n        edges\n      };\n    };\n    const graphData = createGraphData(data);\n    const options = {\n      nodes: {\n        shape: \"box\",\n        color: {\n          background: \"#D2E5FF\",\n          border: \"#2B7CE9\"\n        },\n        font: {\n          color: \"#343434\"\n        }\n      },\n      edges: {\n        color: \"#848484\",\n        arrows: {\n          to: {\n            enabled: true,\n            scaleFactor: 0.5\n          }\n        }\n      },\n      layout: {\n        hierarchical: {\n          direction: \"UD\",\n          sortMethod: \"directed\"\n        }\n      },\n      interaction: {\n        dragNodes: true\n      },\n      physics: false\n    };\n    const network = new Network(containerRef.current, graphData, options);\n    return () => {\n      network.destroy(); // Cleanup the network instance\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      height: \"600px\",\n      border: \"1px solid #ccc\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n}\n_s(JSONVisualizer, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = JSONVisualizer;\nfunction App() {\n  _s2();\n  const [jsonInput, setJsonInput] = React.useState(\"\");\n  const [jsonData, setJsonData] = React.useState(null);\n  const [error, setError] = React.useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    try {\n      const parsedJSON = JSON.parse(jsonInput);\n      setJsonData(parsedJSON);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Invalid JSON. Please fix and try again.\");\n      setJsonData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JSON Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter JSON here...\",\n        value: jsonInput,\n        onChange: e => setJsonInput(e.target.value),\n        rows: 10,\n        cols: 50,\n        style: {\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Visualize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualizer-container\",\n      children: jsonData && /*#__PURE__*/_jsxDEV(JSONVisualizer, {\n        data: jsonData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"SzIpDVAPOPZgEJI8R2swxWn+1SI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"JSONVisualizer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","Network","jsxDEV","_jsxDEV","JSONVisualizer","data","_s","containerRef","createGraphData","json","nodes","edges","idCounter","traverse","node","parentId","nodeId","push","id","label","String","from","to","Object","entries","forEach","key","value","keyId","graphData","options","shape","color","background","border","font","arrows","enabled","scaleFactor","layout","hierarchical","direction","sortMethod","interaction","dragNodes","physics","network","current","destroy","ref","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","jsonInput","setJsonInput","useState","jsonData","setJsonData","error","setError","handleSubmit","e","preventDefault","parsedJSON","JSON","parse","err","className","children","onSubmit","placeholder","onChange","target","rows","cols","marginBottom","type","_c2","$RefreshReg$"],"sources":["C:/Users/swaya/OneDrive/Documents/GitHub/ChatBot/json-visualizer/src/App.js"],"sourcesContent":["// Install vis-network before using this code: npm install vis-network\n\nimport React, { useRef, useEffect } from \"react\";\nimport { Network } from \"vis-network\";\nimport \"./App.css\";\n\nfunction JSONVisualizer({ data }) {\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (!data) return;\n\n    // Convert JSON to nodes and edges for vis-network\n    const createGraphData = (json) => {\n      const nodes = [];\n      const edges = [];\n\n      let idCounter = 1;\n      const traverse = (node, parentId = null) => {\n        const nodeId = idCounter++;\n        nodes.push({ id: nodeId, label: typeof node === \"object\" ? \"Object\" : String(node) });\n\n        if (parentId !== null) {\n          edges.push({ from: parentId, to: nodeId });\n        }\n\n        if (typeof node === \"object\" && node !== null) {\n          Object.entries(node).forEach(([key, value]) => {\n            const keyId = idCounter++;\n            nodes.push({ id: keyId, label: key });\n            edges.push({ from: nodeId, to: keyId });\n            traverse(value, keyId);\n          });\n        }\n      };\n\n      traverse(json);\n      return { nodes, edges };\n    };\n\n    const graphData = createGraphData(data);\n\n    const options = {\n      nodes: {\n        shape: \"box\",\n        color: {\n          background: \"#D2E5FF\",\n          border: \"#2B7CE9\",\n        },\n        font: { color: \"#343434\" },\n      },\n      edges: {\n        color: \"#848484\",\n        arrows: {\n          to: { enabled: true, scaleFactor: 0.5 },\n        },\n      },\n      layout: {\n        hierarchical: {\n          direction: \"UD\",\n          sortMethod: \"directed\",\n        },\n      },\n      interaction: { dragNodes: true },\n      physics: false,\n    };\n\n    const network = new Network(containerRef.current, graphData, options);\n\n    return () => {\n      network.destroy(); // Cleanup the network instance\n    };\n  }, [data]);\n\n  return <div ref={containerRef} style={{ height: \"600px\", border: \"1px solid #ccc\" }}></div>;\n}\n\nfunction App() {\n  const [jsonInput, setJsonInput] = React.useState(\"\");\n  const [jsonData, setJsonData] = React.useState(null);\n  const [error, setError] = React.useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      const parsedJSON = JSON.parse(jsonInput);\n      setJsonData(parsedJSON);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Invalid JSON. Please fix and try again.\");\n      setJsonData(null);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>JSON Visualizer</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          placeholder=\"Enter JSON here...\"\n          value={jsonInput}\n          onChange={(e) => setJsonInput(e.target.value)}\n          rows={10}\n          cols={50}\n          style={{ marginBottom: \"10px\" }}\n        />\n        <br />\n        <button type=\"submit\">Visualize</button>\n      </form>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <div className=\"visualizer-container\">\n        {jsonData && <JSONVisualizer data={jsonData} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}